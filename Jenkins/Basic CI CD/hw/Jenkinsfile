pipeline
{
  agent any
  environment {
        BASE_DIR = "projects"
        REPO = "devops-bgapp"
        SOURCE = "https://github.com/ivelin1936"
        DO_IMG_WEB = "img-bgapp-web"
        DO_IMG_DB = "img-bgapp-db"
        DO_WEB_CONTAINER = "web"
        DO_DB_CONTAINER = "db"
        NETWORK_NAME = "appnet"
        DO_FILE_WEB = "Dockerfile.web"
        DO_FILE_DB = "Dockerfile.db"
        DB_CONTAINER_ENV = "MYSQL_ROOT_PASSWORD=12345"
        DO_WEB_PORT_FORWARDING = "8282:80"
        DO_WEB_VOLUME = "/projects/devops-bgapp/web:/var/www/html:ro"
    }

  stages
  {
    stage('Clone the project')
    {
      steps
      {
        sh '''#!/bin/bash
            if [ -d "/${BASE_DIR}" ]; then
                sudo mkdir -p "/${BASE_DIR}"
                sudo chown -R jenkins:jenkins "/${BASE_DIR}"
            fi
            if [ "$(basename $PWD)" != "${BASE_DIR}" ]; then
                cd "/${BASE_DIR}"
            fi

            if [ -d "/${BASE_DIR}/${REPO}" ]; then
                cd "/${BASE_DIR}/${REPO}"
                git pull ${SOURCE}/${REPO}.git
            else
                git clone ${SOURCE}/${REPO}.git
            fi
          '''
      }
    }
    stage('Build the images')
    {
      steps
      {
        sh '''#!/bin/bash
            if [ "$(basename $PWD)" != "${REPO}" ]; then
                [ -d "${REPO}" ] && cd ${REPO} || cd "/${BASE_DIR}/${REPO}"
            fi

            sudo docker image rm -f ${DO_IMG_WEB} || true
            sudo docker image rm -f ${DO_IMG_DB} || true

            sudo docker image build -t ${DO_IMG_WEB} --file ${DO_FILE_WEB} .
            sudo docker image build -t ${DO_IMG_DB} --file ${DO_FILE_DB} .
           '''
      }
    }
    stage('Create a common network')
    {
      steps
      {
        sh '''#!/bin/bash
            sudo docker network ls | grep ${NETWORK_NAME} || sudo docker network create ${NETWORK_NAME}
           '''
      }
    }
    stage('Run the application')
    {
      steps
      {
        sh '''
        sudo docker container rm -f ${DO_WEB_CONTAINER} || true
        sudo docker container run -d --name ${DO_WEB_CONTAINER} --net ${NETWORK_NAME} -p ${DO_WEB_PORT_FORWARDING} -v ${DO_WEB_VOLUME} ${DO_IMG_WEB}

        sudo docker container rm -f ${DO_DB_CONTAINER} || true
        sudo docker container run -d --name ${DO_DB_CONTAINER} --net ${NETWORK_NAME} -e ${DB_CONTAINER_ENV} ${DO_IMG_DB}
        '''
      }
    }
  }
}
